---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="color-scheme" content="light-dark" />
<meta name="darkreader-lock" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/atom+xml"
	title={SITE_TITLE}
	href={new URL('feed.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<!-- <link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin /> -->
<!-- <link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin /> -->

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<link type="text/plain" rel="author" href="/humans.txt" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content="Isabel Roses" />
<meta name="keywords" content="Isabel Roses, blog, go, rust, personal, tech, programming, web development, software engineering" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{ image && ( <meta property="og:image" content={new URL(image, Astro.url)} /> ) }

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{ image && ( <meta property="twitter:image" content={new URL(image, Astro.url)} /> ) }

<!-- <script defer src="https://analytics.isabelroses.com/script.js" data-website-id="be210218-aad1-4b3a-a6a3-366952e22d8e"></script> -->
<link rel="expect" href="#below-the-fold" blocking="render" />

<script is:inline>
// set theme on intial load
setTheme(getTheme());

document.addEventListener("DOMContentLoaded", () => {
  const themes = document.getElementById("themes");

  setTheme(getTheme());

  themes.addEventListener("change", (event) => {
    setTheme(event.target.value);
  });
});

function setTheme(theme) {
  localStorage.setItem("theme", theme);
  document.documentElement.setAttribute("data-theme", theme);

  const themes = document.getElementById("themes");
  if (themes) {
    themes.value = theme;
  }
}

function getTheme() {
  const theme = localStorage.getItem("theme");

  if (theme) return theme;

  if (!window.matchMedia) return "dark";

  if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    return "dark";
  } else {
    return "light";
  }
}
</script>
