---
import "../styles/global.css";
import { SITE_TITLES } from "../lib/consts";

import { ClientRouter } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="color-scheme" content="light dark" />
<meta name="darkreader-lock" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/atom+xml"
  title={SITE_TITLES.index}
  href={new URL("feed.xml", Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<!-- <link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin /> -->
<!-- <link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin /> -->

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<link type="text/plain" rel="author" href="/humans.txt" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content="isabel roses" />
<meta
  name="keywords"
  content="isabel roses, blog, go, rust, personal, tech, programming, web development, software engineering"
/>

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{image && <meta property="og:image" content={new URL(image, Astro.url)} />}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{image && <meta property="twitter:image" content={new URL(image, Astro.url)} />}

<!-- shared useful functions -->
<script is:inline>
  function formatSongLength(n) {
    const s = n.toString();
    if (s.length > 3) {
      const mid = Math.floor(s.length / 2);
      const left = s.slice(0, mid);
      const right = s.slice(mid);
      return `${left}:${right}`;
    } else {
      const padded = s.padStart(3, "0");
      return `${padded[0]}:${padded.slice(1)}`;
    }
  }

  // set theme on intial load
  setTheme(getTheme());

  document.addEventListener("astro:page-load", () => {
    const themes = document.getElementById("themes");

    setTheme(getTheme());

    themes.addEventListener("change", (event) => {
      setTheme(event.target.value);
    });
  });

  function setTheme(theme) {
    localStorage.setItem("theme", theme);
    document.documentElement.setAttribute("data-theme", theme);
    const themes = document.getElementById("themes");
    if (themes) themes.value = theme;
  }

  function getTheme() {
    const theme = localStorage.getItem("theme");
    if (theme) return theme;
    if (!window.matchMedia) return "dark";
    if (window.matchMedia("(prefers-color-scheme: dark)").matches)
      return "dark";
    return "light";
  }
</script>

<ClientRouter />
